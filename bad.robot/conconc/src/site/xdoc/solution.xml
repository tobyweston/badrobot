<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2009-2011, bad robot (london) ltd
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!--
Fool Maven's validator:
(see http://jira.codehaus.org/browse/MSITE-440)
<document blah="true">
</document>
-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>Solutions</title>
        <author>Toby Weston</author>
    </properties>

    <body>

        <section name="Example Solutions">

            <p>
                This section presents the solutions to the problem.
            </p>
            <subsection name="Pessimistic / Lock Based Synchronisation">
            </subsection>

            <subsection name="Optimistic / Software Transaction Memory">
                <p>
                    The specific Software Transaction Memory library used for this discussion is the Multiverse STM. I
                    used some syntactic sugar available as part of Akka (akka-stm) but the core STM is Multiverse.
                </p>
                <p>
                    Multiverse version 0.6 is based around the Multi Version Concurrency Control (MVCC) idea. This means
                    ... something about a central clock/version ...
                    Specifically, it uses a Transaction Locking II (TL2) algorithm in its central engine. The central
                    engine of Multiverse is called AlphaSTM.
                </p>
                <p>
                    Multiverse version 0.7 shifted away from the central clock towards the idea of a conflict counter
                    (comparable to the SkySTM) which offers less contention. The improved core engine pools more objects
                    and is described by the author as faster than previous versions. The central engine is 0.7 is called
                    BetaSTM (or is it GammaSTM?).
                </p>
            </subsection>

        </section>

    </body>

</document>